{"remainingRequest":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/babel-loader/lib/index.js!/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/dickson/PersonalProjects/britecore/britecore_test/frontend/src/components/CategoryItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/src/components/CategoryItem.vue","mtime":1565730616475},{"path":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/dickson/PersonalProjects/britecore/britecore_test/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport modal from \"./modal/Modal.vue\";\nimport Favorites from \"./Favorite.vue\";\nimport { APIService } from \"../BackendApiService.js\";\nexport default {\n  name: \"CategoryItem\",\n  props: [\"category\"],\n  components: {\n    Favorites: Favorites,\n    modal: modal\n  },\n  data: function data() {\n    return {\n      isAddModalVisible: false,\n      favorites: [],\n      viewList: true,\n      ranking: \"\",\n      title: \"\",\n      description: \"\",\n      metadata: [{\n        key: \"\",\n        value: \"\"\n      }]\n    };\n  },\n  methods: {\n    AddMetadata: function AddMetadata() {\n      this.metadata.push({\n        key: \"\",\n        value: \"\"\n      });\n    },\n    showAddModal: function showAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal: function closeAddModal() {\n      this.isAddModalVisible = false;\n      this.metadata = [{\n        key: \"\",\n        value: \"\"\n      }];\n    },\n    updateFavorite: function updateFavorite() {\n      var _this = this;\n\n      var api_serv = new APIService();\n      api_serv.getFavThings(this.category.id, localStorage.user_id).then(function (res) {\n        if (res.data.code == \"010\") {\n          _this.favorites = res.data.favThings;\n          _this.metadata = [{\n            key: \"\",\n            value: \"\"\n          }];\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.$emit(\"update-log\");\n    },\n    AddThingModal: function AddThingModal(e) {\n      var _this2 = this;\n\n      e.preventDefault();\n\n      if (this.description != \"\" && this.description.length < 10) {\n        alert(\"Text length must be at least 10 characters or left empty.\");\n        return;\n      }\n\n      var api_serv = new APIService(); // prepare the string to be passed to the backend\n\n      var met_data = api_serv.prepareMeta(this.metadata);\n      var newThing = {\n        ranking: this.ranking,\n        title: this.title,\n        description: this.description,\n        category: this.category.id,\n        user: localStorage.user_id,\n        metadata: met_data\n      };\n      api_serv.createThing(newThing).then(function (res) {\n        if (res.data.code == \"010\") {\n          api_serv.getFavThings(_this2.category.id, localStorage.user_id).then(function (res) {\n            if (res.data.code == \"010\") {\n              _this2.favorites = res.data.favThings;\n              _this2.metadata = [{\n                key: \"\",\n                value: \"\"\n              }];\n              _this2.ranking = \"\";\n              _this2.title = \"\";\n              _this2.description = \"\"; //send an emit function to logs\n\n              _this2.$emit(\"update-log\");\n            }\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n      this.isAddModalVisible = false;\n    } // other JS methods hered\n\n  },\n  created: function created() {\n    var _this3 = this;\n\n    var api_serv = new APIService();\n    api_serv.getFavThings(this.category.id, localStorage.user_id).then(function (res) {\n      if (res.data.code == \"010\") {\n        _this3.favorites = res.data.favThings;\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n};",{"version":3,"sources":["CategoryItem.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"category-item row\">\n    <modal v-if=\"isAddModalVisible\">\n      <h3 slot=\"header\" class=\"modal-title\">\n        Add a Thing to the List\n      </h3>\n\n      <div slot=\"body\">\n        <form @submit=\"AddThingModal\">\n          <div class=\"form-group\">\n            <label for=\"rank\">Rank</label>\n            <input\n              type=\"number\"\n              class=\"form-control\"\n              id=\"rank\"\n              v-model=\"ranking\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"title\">Title*</label>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"title\"\n              required\n              v-model=\"title\"\n              maxlength=\"20\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"title\">Description</label>\n            <textarea\n              type=\"text\"\n              class=\"form-control\"\n              id=\"description\"\n              v-model=\"description\"\n            >\n            </textarea>\n          </div>\n          <div>\n            <label\n              title=\"Please you are required to enter the value with keys attached\"\n              >Metadata</label\n            ><br />\n            <div class=\"form-group \">\n              <div\n                class=\"row\"\n                v-bind:key=\"index\"\n                v-for=\"(item, index) in metadata\"\n              >\n                <div class=\"col-3\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"key\"\n                    class=\"form-control\"\n                    v-model=\"item.key\"\n                  />\n                </div>\n                <div class=\"col-9\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"value\"\n                    class=\"form-control\"\n                    v-model=\"item.value\"\n                  />\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-7\"></div>\n                <div class=\"col-5 action\">\n                  <button class=\"btn btn-sm\" type=\"button\" @click=\"AddMetadata\">\n                    <i class=\"fa fa-plus\"></i> create more\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <button type=\"submit\" class=\"btn btn-outline-info\">Submit</button>\n            <button\n              type=\"button\"\n              class=\"btn btn-outline-info\"\n              @click=\"closeAddModal\"\n            >\n              close\n            </button>\n          </div>\n        </form>\n      </div>\n    </modal>\n    <div class=\"col-7\">\n      <br />\n      <b>{{ category.name }}</b>\n    </div>\n    <div class=\"col-5 action\">\n      <button\n        class=\"btn\"\n        title=\"view things in this category\"\n        @click=\"viewList = !viewList\"\n      >\n        <i class=\"fa fa-bars\"> </i>\n      </button>\n      <button\n        class=\"btn\"\n        title=\"add a new thing to this category\"\n        @click=\"showAddModal\"\n      >\n        <i class=\"fa fa-plus\"></i>\n      </button>\n    </div>\n\n    <div class=\"col-12\" v-if=\"viewList\">\n      <Favorites\n        v-bind:favorites=\"favorites\"\n        v-on:update-favorite=\"updateFavorite\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport modal from \"./modal/Modal.vue\";\nimport Favorites from \"./Favorite.vue\";\nimport { APIService } from \"../BackendApiService.js\";\nexport default {\n  name: \"CategoryItem\",\n  props: [\"category\"],\n  components: {\n    Favorites,\n    modal\n  },\n  data() {\n    return {\n      isAddModalVisible: false,\n      favorites: [],\n      viewList: true,\n      ranking: \"\",\n      title: \"\",\n      description: \"\",\n      metadata: [{ key: \"\", value: \"\" }]\n    };\n  },\n  methods: {\n    AddMetadata() {\n      this.metadata.push({ key: \"\", value: \"\" });\n    },\n    showAddModal() {\n      this.isAddModalVisible = true;\n    },\n    closeAddModal() {\n      this.isAddModalVisible = false;\n      this.metadata = [{ key: \"\", value: \"\" }];\n    },\n    updateFavorite() {\n      let api_serv = new APIService();\n      api_serv\n        .getFavThings(this.category.id, localStorage.user_id)\n        .then(res => {\n          if (res.data.code == \"010\") {\n            this.favorites = res.data.favThings;\n            this.metadata = [{ key: \"\", value: \"\" }];\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      this.$emit(\"update-log\");\n    },\n    AddThingModal(e) {\n      e.preventDefault();\n      if (this.description != \"\" && this.description.length < 10) {\n        alert(\"Text length must be at least 10 characters or left empty.\");\n        return;\n      }\n      let api_serv = new APIService();\n      // prepare the string to be passed to the backend\n      const met_data = api_serv.prepareMeta(this.metadata);\n      const newThing = {\n        ranking: this.ranking,\n        title: this.title,\n        description: this.description,\n        category: this.category.id,\n        user: localStorage.user_id,\n        metadata: met_data\n      };\n      api_serv\n        .createThing(newThing)\n        .then(res => {\n          if (res.data.code == \"010\") {\n            api_serv\n              .getFavThings(this.category.id, localStorage.user_id)\n              .then(res => {\n                if (res.data.code == \"010\") {\n                  this.favorites = res.data.favThings;\n                  this.metadata = [{ key: \"\", value: \"\" }];\n                  this.ranking = \"\";\n                  this.title = \"\";\n                  this.description = \"\";\n                  //send an emit function to logs\n                  this.$emit(\"update-log\");\n                }\n              })\n              .catch(err => {\n                console.log(err);\n              });\n          }\n        })\n        .catch(err => {\n          console.log(err);\n        });\n      this.isAddModalVisible = false;\n    }\n    // other JS methods hered\n  },\n\n  created() {\n    let api_serv = new APIService();\n    api_serv\n      .getFavThings(this.category.id, localStorage.user_id)\n      .then(res => {\n        if (res.data.code == \"010\") {\n          this.favorites = res.data.favThings;\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n};\n</script>\n\n<style scoped>\n.category-item {\n  background: #ffffff;\n  padding: 10px;\n  padding-left: 20px;\n  border: 1px rgb(21, 156, 235);\n}\n.btn {\n  border-color: rgb(21, 156, 235);\n  color: rgb(21, 156, 235);\n  margin: 5px;\n}\n.btn:hover {\n  background-color: rgb(21, 156, 235);\n  color: white;\n}\n</style>\n"],"sourceRoot":"src/components"}]}